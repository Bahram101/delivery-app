generator client {
  provider      = "prisma-client-js"
  // output   = "../generated/prisma"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")

  email      String @unique
  password   String
  name       String
  avatarPath String @default("/uploads/default-avatar.png") @map("avatar_path")
  phone      String @default("")

  favorites Favorite[]
  products  Product[]
  orders    Order[]

  @@map("user")
}

model Product {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")

  name        String @unique
  slug        String @unique
  description String
  price       Int
  image       String

  userId String?
  user   User?   @relation(fields: [userId], references: [id])

  categoryId String?
  category   Category? @relation(fields: [categoryId], references: [id])

  favorites Favorite[]

  @@map("product")
}

model Favorite {
  createdAt DateTime @default(now()) @map("created_at")

  userId    String
  productId String

  user    User    @relation(fields: [userId], references: [id])
  product Product @relation(fields: [productId], references: [id])

  @@id([userId, productId])
  @@map("favorite")
}

model Category {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")

  name  String @unique
  slug  String @unique
  image String

  products Product[]

  @@map("category")
}

model Order {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")

  userId String?
  user   User?   @relation(fields: [userId], references: [id])

  @@map("order")
}
